-- Assume you have Rayfield and Tab defined, just like in your provided code

local Window = Rayfield:CreateWindow({
   Name = "Rayfield Example Window",
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   } 
})

local Button = Tab:CreateButton({
   Name = "Follow Nearest Player",
   Callback = function()
      local players = game:GetService("Players"):GetPlayers()
      local localPlayer = game.Players.LocalPlayer

      local nearestPlayer
      local minDistance = math.huge

      for _, player in ipairs(players) do
         if player ~= localPlayer then
            local playerCharacter = player.Character
            local localPlayerCharacter = localPlayer.Character

            if playerCharacter and localPlayerCharacter then
               local playerTorso = playerCharacter:FindFirstChild("HumanoidRootPart")
               local localPlayerTorso = localPlayerCharacter:FindFirstChild("HumanoidRootPart")

               if playerTorso and localPlayerTorso then
                  local distance = (playerTorso.Position - localPlayerTorso.Position).Magnitude
                  if distance < minDistance then
                     minDistance = distance
                     nearestPlayer = player
                  end
               end
            end
         end
      end

      if nearestPlayer then
         local playerTorso = nearestPlayer.Character:FindFirstChild("HumanoidRootPart")
         if playerTorso then
            local mouse = game.Players.LocalPlayer:GetMouse()
            mouse.Target = playerTorso
         end
      end
   end,
})
